 <!DOCTYPE html>
 <head><head>

 <body>
<div>

<div><input type="text" id="addcode" style="width:300px"/>
<button onclick="addchars()">rectify string</button></div><br>


</div>


<div id="cancon">

</div>

 <div style="visibility:collapse;"><input type="text" id="fullcode" style="width:300px"/>
<button onclick="runrect()">run</button></div>

 <script>

var capAl= ["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];
var rectAl=[
"<B,25,969,0,<B,125,19,0,<B,125,969,0>><B,125,19,684>>",
"<B,100,969,0,<B,75,19,0,<B,75,19,19,<B,50,19,69,<B,75,323,69,<B,50,19,398,<B,75,19,94,<B,125,19,169,<B,75,19,69,<B,50,38,69,<B,75,418,88,<B,50,19,493,<B,75,19,94,<B,75,19,169>>>>>>>>>>>>>>",
"<B,0,19,0,<B,100,931,19,<B,225,19,2456,<B,75,152,69>><B,225,19,1006,<B,75,171,759>>>>",
"<B,100,969,0,<B,75,19,0,<B,75,19,19,<B,50,19,69,<B,75,855,69,<B,50,19,930,<B,75,19,94,<B,75,19,169>>>>>>>>",
"<B,125,969,0,<B,75,19,0,<B,75,171,0>><B,150,19,418><B,75,19,950,<B,75,152,-133>>>",
"<B,125,969,0,<B,75,19,0,<B,75,171,0>><B,150,19,418>>",
"<B,100,969,0,<B,75,19,0,<B,75,19,19,<B,50,19,69,<B,75,114,69>>>><B,75,19,950,<B,75,19,-19,<B,50,19,-69,<B,75,494,-544,<B,50,19,-163>>>>>>",
"<B,100,969,0,<B,75,19,399,<B,100,969,-399>>>",
"<B,275,19,0,<B,125,931,219,<B,275,19,1131>>>",
"<B,0,684,0,<B,100,266,684,<B,225,19,341,<B,100,931,-1006,<B,125,19,-144>>>>>",
"<B,100,969,0,<B,100,38,399,<B,50,76,-101,<B,50,171,-196,<B,50,152,-177>>><B,100,190,88,<B,100,342,265>>>>",
"<B,125,969,0,<B,25,19,0><B,75,19,950,<B,75,152,-133>>>",
"<B,25,969,0,<B,25,228,0,<B,25,608,0,<B,25,380,209,<B,25,190,190,<B,75,380,240,<B,25,380,-380,<B,25,209,-209,<B,75,969,0>>>>>>>>>",
"<B,25,969,0,<B,50,19,0,<B,100,228,0,<B,100,380,303,<B,100,361,455,<B,25,19,342,<B,25,969,-950>>>>>>>",
"<B,100,969,0,<B,75,19,0,<B,100,969,0>><B,75,19,950>>",
"<B,100,969,0,<B,75,19,0,<B,75,19,19,<B,50,19,69,<B,75,399,69,<B,50,19,474,<B,75,19,94,<B,125,19,169>>>>>>>>",
"<B,100,969,0,<B,75,19,0,<B,100,969,0>><B,75,19,950,<B,25,171,-221>>>",
"<B,100,969,0,<B,75,19,0,<B,75,19,19,<B,50,19,69,<B,75,399,69,<B,50,19,474,<B,75,19,94,<B,125,19,169,<B,75,19,69,<B,50,38,69,<B,75,399,88>>>>>>>>>>>",
"<B,0,19,0,<B,100,437,19,<B,225,19,-94,<B,75,152,69>><B,75,38,418,<B,25,57,0,<B,50,19,19><B,75,475,38,<B,225,19,725,<B,75,266,-541>>>>>>>",
"<B,50,171,0,<B,25,19,0,<B,125,969,0,<B,25,19,0,<B,50,171,0>>>>>",
"<B,100,950,0,<B,225,19,1025,<B,100,950,-1025>>>",
"<B,100,228,0,<B,100,380,303,<B,100,361,455,<B,25,19,342,<B,50,361,-342,<B,50,380,-405,<B,50,228,-253>>>>>>>",
"<B,75,969,0,<B,25,209,760,<B,25,399,-399,<B,75,361,-361,<B,75,171,411,<B,50,190,221,<B,50,247,215,<B,25,969,-722>>>>>>>>>",
"<B,100,209,0,<B,100,247,259,<B,25,285,372,<B,25,228,335>><B,100,285,272,<B,25,247,-247,<B,25,209,-209>><B,100,228,335>>>>",
"<B,125,646,0,<B,100,323,696><B,150,19,627,<B,25,627,-652>>>",
"<B,75,152,0,<B,50,19,0,<B,100,456,0,<B,50,209,0><B,100,513,631,<B,50,228,891><B,50,19,494,<B,75,171,-152>>>>>>",
"<B,0,0,0>"
];

 var charcount = 0;

 var dfltcanW = 300;
 var dfltcanH = 988;
 var magnitude = 0.3;
 dfltcanW =  dfltcanW * magnitude;
 dfltcanH =  dfltcanH * magnitude;

var iptxt = document.getElementById("addcode");
iptxt.addEventListener("focus",function(){
this.value="";
});



function addchars(){

var thestring = document.getElementById('addcode').value;

function myindexOf(arr,tar){
 if(arr.indexOf(tar)==-1){return 26;
   } else {return arr.indexOf(tar);
     } }

for (var i =0; i<thestring.length; i++){
var tarch = thestring.charAt(i);
var rectcode = rectAl[myindexOf(capAl,tarch)];
console.log(tarch + ":" + rectcode);
addchar(rectcode);
}

}



function addchar(rectcode){

var cancon = document.getElementById('cancon');
    var newcan = document.createElement('canvas'); 
    var newid  = "can" + (charcount + 1);
    newcan.id  = newid;  
    newcan.height = dfltcanH;       
    newcan.width  = dfltcanW;
    newcan.top = 0;
    newcan.left = charcount * dfltcanW;     
    cancon.appendChild(newcan);

    charcount = charcount + 1;
   
    var cx = document.getElementById(newid).getContext('2d');
    cx.fillStyle = "lightgrey";		
    cx.fillRect(0,0,dfltcanW,dfltcanH);

    runrect(newid,rectcode);
}


function addcode(){
var addbox = document.getElementById("addcode");
currentcode.addingcode(addbox.value);
var box = document.getElementById("fullcode");
//box.value = currentcode.workingstring;
box.value = currentcode.executestring();
runrect();
}


function runrect(canvasid,rectcode){
//var box = document.getElementById("fullcode");
//console.log(box.value);
//var code = box.value;
var out = rPser(rectcode,1);
var got = rExer(out);
console.log("runrect:" + got)
simpledrawer(got,canvasid);
}

function simpledrawer(arr,canvasid){

// 		var cx = document.querySelector("canvas").getContext('2d');		
// 		cx.fillStyle="lightgrey";		
// 		cx.fillRect(0,0,300,300);
//      var somestring = "20,10,1,1";
//      console.log(somestring.split(",")[0]); 

 //var cx=document.querySelector("canvas").getContext("2d");
   var cx=document.getElementById(canvasid).getContext("2d");

 for (var i = 0; i<arr.length;i++){

    if  (arr[i].split(",")[4]=="B"){
     cx.fillStyle="black";
    }else if (arr[i].split(",")[4]=="W"){
    cx.fillStyle="white";
    }else{
    cx.fillStyle="lightgrey";
    }

        cx.fillRect(
         arr[i].split(",")[0] * magnitude
        ,arr[i].split(",")[1] * magnitude
        ,arr[i].split(",")[2] * magnitude
        ,arr[i].split(",")[3] * magnitude
        );
 }
}




/////////////////////
//CURRENTCODEOBJECT//
/////////////////////

var currentcode = {};

currentcode.workingstring = "";

currentcode.rectcount = 0;

currentcode.executestring = function(){
var temp = currentcode.workingstring.replace(/,CHILDREN/g,"");
return temp = temp.replace(/CHILDREN/g,"");
}

currentcode.addChild = function(chldstr,noden){

currentcode.rectcount = currentcode.rectcount + 1;

var idx = null;
var char = "";
var tarstr = "";
var wrstr =  currentcode.workingstring;

if(noden==undefined){
    noden=currentcode.rectcount;
}

    for (var place = 1 ; place < wrstr.length + 1; place++){
        char = wrstr[place - 1]
        tarstr= tarstr + char;
        if (char == "<") {idx = idx + 1;}
        if (char == ">") {idx = idx - 1;}
        if (char == "C"){//hey check "CHILDREN"
                var cflag = "c";
             }else{cflag="noc";}
        if(cflag == "c" && idx == noden){
            //var ido = tarstr.indexOf("CHILDREN");
            var ido = place ;
            var len = wrstr.length;
            var mae =  wrstr.slice(0,ido-1);
            var ushiro = wrstr.slice(ido - 1,len);
            currentcode.workingstring = mae + chldstr  + ushiro;
            //wrstr.length = wrstr.length + 11;
            //place = place + 11;
            wrstr.length = wrstr.length + chldstr.length;
            place = place + chldstr.length;
            return; 
        }          
    }
}

currentcode.codedresser = function(string) {
 return "<" + string + ",CHILDREN>";
}

currentcode.addingcode = function(string,whichnode){

//currentcode.rectcount = currentcode.rectcount + 1;

    if(currentcode.workingstring == ""){
        currentcode.workingstring = "<" + string + ",CHILDREN>";
        return currentcode.executestring()
    }
    else{
    currentcode.addChild(currentcode.codedresser(string),whichnode);
    //var out = currentcoce.workingstring;
    var out = currentcode.executestring();
    return out;
    }
}

// //FOR TEST// //
// //var code1 = "<BO,1,1,1,CHILDREN>"
// //var code2 = "<BO,2,2,2,CHILDREN>"
// //var code3 = "<BO,3,3,3,CHILDREN>"
// //currentcode.workingstring = code1;
// console.log(currentcode.addingcode("BO,9,9,9"));
// console.log(currentcode.workingstring);
// console.log(currentcode.addingcode("BO,1,1,1"));
// console.log(currentcode.workingstring);
// console.log(currentcode.addingcode("BO,2,2,2",2));
// console.log(currentcode.workingstring);






///////////////
///RECT CORE///
///////////////

function rExer(mot){

var out = [];

var dummyparent = {};
dummyparent.args = [0,0,0,0,0,0,0];
mot.parent[0] = dummyparent; 

innerExer(mot);

function innerExer(mot){

    arect(mot.args[1]*1,mot.args[2]*1,mot.args[3]*1,mot);

 for (var c = 0; c < mot.children.length; c++){
    innerExer(mot.children[c]);
    }

        function arect(w,h,grade,mot){

            lecs = mot.parent[0].args[5];
            lwai = mot.parent[0].args[6];
            lwid = mot.parent[0].args[1] * 1;
            lhei = mot.parent[0].args[2] * 1;

            var cnt = 0;
            myx = [];
            myy = [];
            
            for ( h1 = 0 ; h1 < lhei ; h1++ ){
                myx[cnt] = lecs + lwid;
                myy[cnt] = lwai + h1;
                cnt = cnt + 1;
            }
            for ( h2 = 0 ; h2 < lwid + w ; h2++ ){
                myx[cnt] = lecs + lwid - h2;
                myy[cnt] = lwai + lhei;
                cnt = cnt + 1;
            }
            for ( h3 = 0 ; h3 < lhei + h ; h3++ ){
                myx[cnt] = lecs - w;
                myy[cnt] = lwai + lhei - h3;
                cnt = cnt + 1;
            }
            for ( h4 = 0 ; h4 < lwid + w ; h4++ ){
                myx[cnt] = lecs - w + h4;
                myy[cnt] = lwai - h;
                cnt = cnt + 1;
            }

            //finish the clock
			for ( h5 = 0 ; h5 < h ; h5++ ){
                //myx[cnt] = lecs + w;
                myx[cnt] = lecs + lwid;
				myy[cnt] = lwai - h  + h5;
				cnt = cnt + 1;
            }
            
            //minus values
            if(grade<0){
            var stop = "stop";
            //you dont need the loops below?
            //..I need the loops
                grade = grade + cnt;
            }

            //cx.fillStyle="black";
            //cx.fillRect(myx[grade],myy[grade],w,h);
            var outstring = myx[grade] + "," + myy[grade] + "," + w + "," + h + "," + mot.args[0];
            //console.log( outstring );
            mot.args.push(myx[grade]);
            mot.args.push(myy[grade]);
            out.push(outstring);
        } 
}

return out;
}






function rPser(code,place){

var onelet =function(string,which)
 {return string.slice(which-1,which);}

var starting = "yes";
var currbuf="";
var obj = {};
var rectcount = 0;
obj.args = [];
obj.children = [];
obj.mylen=0;
obj.parent = [];
var codelen = code.length;
var c = place;
    for(c; c<=codelen; c++){
       
        var let = onelet(code,c);
            if(let==">"){
                obj.args.push(currbuf);
                obj.mylen += 1;
                return obj;
            }
            else if(let == "<" && starting=="no"){
                var child = rPser(code,c);
                child.parent.push(obj);
                c = c + child.mylen - 1 //('<<' => '<')  ;
                obj.mylen = obj.mylen + child.mylen -1;
                obj.children.push(child);
            }
            else{
                starting = "no";
                if(let==","){
                obj.args.push(currbuf);
                currbuf="";
                }

                else{
                  if (let=="<"){rectcount=rectcount+1;}
                      else{    
                      currbuf = currbuf + let;
                      }
                   }
            }
         obj.mylen += 1;
    }
}


// ///TESTS///
// var code = "<BO,20,20,0,<BO,15,15,0,<BO,1,1,0>><BO,10,10,25>>";
// var code = "<BO,20,20,0,<BO,15,15,0,<BO,1,1,0>>>";
// var code = "<BO,20,20,0,<BO,15,15,0,<BO,3,3,0>><BO,10,10,0,<BO,12,12,5>>>";
// var out = rPser(code,1);
// var got = rExer(out);
// var stop = "stop";
// console.log(stop);
// //////////




		

  </script>
  </body>
  </html>